{
  "name": "env-switcher",
  "displayName": ".ENV Switcher",
  "description": "Switch .env file content using presets, straight from the status bar",
  "icon": "images/env-switcher.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/EcksDy/vscode-env-switcher.git"
  },
  "publisher": "EcksDy",
  "version": "0.4.3",
  "engines": {
    "vscode": "^1.71.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "workspaceContains:*"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "envSwitcher.selectEnvPreset",
        "title": ".ENV Switcher: Select preset"
      }
    ],
    "configuration": [
      {
        "title": ".ENV Switcher",
        "properties": {
          "envSwitcher.enabled": {
            "markdownDescription": "Enable/Disable the extension.  \r\n _*Can be set per workspace.*_  \r\n _*Requires window reload to take effect.*_",
            "type": "boolean",
            "default": true
          },
          "envSwitcher.overwriteAlert": {
            "markdownDescription": "Enable/Disable the `You're about to overwrite your environment variables!` alert.  \r\n _*Clicking `Don't show again` overwrites this globally*_",
            "type": "boolean",
            "default": true
          },
          "envSwitcher.glob.presets": {
            "markdownDescription": "Glob pattern to find preset files (i.e.: `dev.env`, `.env.local`).  \r\n\r\n _*Can be set per workspace.*_",
            "type": "string",
            "default": "**/*.env"
          },
          "envSwitcher.glob.presetsExclude": {
            "markdownDescription": "Glob patterns to exclude files from preset search.  \r\n\r\n _*Multiple patterns can be provided, separated by a comma(can be slow). Can be set per workspace.*_",
            "type": "string",
            "default": "**/node_modules/**"
          },
          "envSwitcher.glob.target": {
            "markdownDescription": "Glob pattern to find the target file. Default setting will recursively search a `.env` file in the workspace. `.env` files are usually found in the workspace root directory.  \r\n\r\n _*Will always look for `.env` extension only. Will ignore `**/node_modules/**`. Can be set per workspace.*_",
            "type": "string",
            "default": "**/.env"
          },
          "envSwitcher.glob.targetExclude": {
            "markdownDescription": "Glob patterns to exclude files.  \r\n\r\n _*Multiple patterns can be provided, separated by a comma(can be slow). Can be set per workspace.*_",
            "type": "string",
            "default": "**/node_modules/**"
          },
          "envSwitcher.statusBarPosition": {
            "markdownDescription": "Status bar button position.  \r\n _*Requires window reload to take effect.*_",
            "type": "string",
            "default": "outerLeft",
            "enum": [
              "outerLeft",
              "innerLeft",
              "outerRight",
              "innerRight"
            ],
            "enumDescriptions": [
              "Will try to position itself first, from the left corner",
              "Will try to position itself last, from the left corner",
              "Will try to position itself first, from the right corner",
              "Will try to position itself last, from the right corner"
            ]
          },
          "envSwitcher.warning.regex": {
            "description": "Regex pattern(with case insensitive flag) to test for presets that should appear with a warning on the status bar button. By default warnings will appear for presets with 'prod'/'PROD' in them. Changing the setting to an empty string will disable warning appearance.",
            "type": "string",
            "default": ".*prod.*"
          },
          "envSwitcher.warning.color": {
            "description": "Status bar button warnings will appear with this color.",
            "type": "string",
            "default": "default",
            "enum": [
              "default",
              "white",
              "black",
              "red",
              "magenta",
              "yellow"
            ]
          }
        }
      }
    ]
  },
  "scripts": {
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
    "vscode:prepublish": "npm run compile",
    "compile": "npm run esbuild-base -- --minify",
    "watch": "npm run esbuild-base -- --sourcemap --watch",
    "lint": "eslint \"src/**/*.ts\"",
    "lint-staged": "eslint --fix",
    "preui-test": "rm -rf out && tsc -p ./tsconfig.test.json",
    "format": "prettier --write",
    "prepare": "husky install",
    "ui-test": "extest setup-and-run './out/ui-test/*.test.js' --mocha_config './src/ui-test/setup/.mocharc.json' --extensions_dir '.vscode-test/extensions' --storage '.vscode-test/resources' --code_settings ./src/ui-test/setup/settings.json"
  },
  "lint-staged": {
    "*.ts": [
      "npm run format",
      "npm run lint-staged"
    ]
  },
  "devDependencies": {
    "@types/chai": "^4.3.5",
    "@types/mocha": "^10.0.1",
    "@types/mocha-each": "^2.0.0",
    "@types/node": "16.11.68",
    "@types/vscode": "1.71.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "chai": "^4.3.7",
    "esbuild": "^0.19.4",
    "eslint": "^8.44.0",
    "husky": "^8.0.3",
    "lint-staged": "^13.2.3",
    "mocha": "^10.2.0",
    "mocha-each": "^2.0.1",
    "prettier": "^3.0.0",
    "typescript": "^5.1.6",
    "vscode-extension-tester": "5.9.1"
  },
  "overrides": {
    "vscode-helpers": {
      "is-stream": "2.0.1"
    }
  },
  "dependencies": {
    "vscode-helpers": "^10.0.0"
  }
}
